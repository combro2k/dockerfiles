# Global settings
global
  log /dev/log    local0
  log /dev/log    local1 notice

  crt-base /data/ssl
  ca-base /data/ssl

  tune.ssl.default-dh-param 2048

  ssl-default-bind-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
  ssl-default-bind-options no-sslv3 no-tls-tickets

  ssl-default-server-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
  ssl-default-server-options no-sslv3 no-tls-tickets

# Default settings
defaults
  log global

  balance first
  maxconn 5000

  retries 3

  timeout connect 3000ms
  timeout client 5m
  timeout server 5m

  option dontlognull
  option redispatch

{{ range $host, $containers := groupBy $ "Env.VIRTUAL_HOST"}}{{ range $index, $value := $containers }}
{{ $addrLen := len $value.Addresses }}
backend {{ $value.Name }}
  description {{ $host }}

  mode http

  http-request set-header X-Real-IP %[src]
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto https if { ssl_fc }

{{ if eq $addrLen 1 }}
{{ with $address := index $value.Addresses 0 }}  server {{ $value.Name }} {{ $address.IP }}:{{ $address.Port }}{{ end }}
{{ else if $value.Env.VIRTUAL_PORT }}
{{ range $i, $address := $value.Addresses }}{{ if eq $address.Port $value.Env.VIRTUAL_PORT }}  server {{ $value.Name }} {{ $address.IP }}:{{ $address.Port }}{{ end }}{{ end }}
{{ else }}
{{ range $i, $address := $value.Addresses }}{{ if eq $address.Port "80" }}  server {{ $value.Name }} {{ $address.IP }}:{{ $address.Port }}{{ end }}{{ end }}
{{ end }}

  http-response set-header X-Frame-Options "SAMEORIGIN"
  http-response set-header X-Content-Type-Options "nosniff"
  http-response set-header X-XSS-Protection "1; mode=block"

{{ if $value.Env.VHOST_SSL_ONLY }}
  http-response set-header Strict-Transport-Security "max-age=15768000"
{{ end }}

{{ if $value.Env.VHOST_WHITELIST }}
  acl allow_list src {{ $value.Env.VHOST_WHITELIST }}
  http-request allow if allow_list
  http-request deny
{{ end }}

{{ end }}{{ end }}

{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_SSL_HOST" "," }}{{ range $index, $value := $containers }}
{{ $addrLen := len $value.Addresses }}
backend SSL_{{ $value.Name }}
  description {{ $host }}

  mode http
  option httplog

  http-request set-header X-Real-IP %[src]
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto https if { ssl_fc }

{{ if eq $addrLen 1 }}
{{ with $address := index $value.Addresses 0 }}  server {{ $host }} {{ $address.IP }}:{{ $address.Port }} ssl verify none{{ end }}
{{ else if $value.Env.VIRTUAL_SSL_PORT }}
{{ range $i, $address := $value.Addresses }}{{ if eq $address.Port $value.Env.VIRTUAL_SSL_PORT }}  server {{ $host }} {{ $address.IP }}:{{ $address.Port }} ssl verify none{{ end }}{{ end }}
{{ else }}
{{ range $i, $address := $value.Addresses }}{{ if eq $address.Port "443" }}  server {{ $host }} {{ $address.IP }}:{{ $address.Port }} ssl verify none{{ end }}{{ end }}
{{ end }}

  http-response set-header X-Frame-Options "SAMEORIGIN"
  http-response set-header X-Content-Type-Options "nosniff"
  http-response set-header X-XSS-Protection "1; mode=block"

{{ if $value.Env.VHOST_SSL_ONLY }}
  http-response set-header Strict-Transport-Security "max-age=15768000"
{{ end }}

{{ if $value.Env.VHOST_WHITELIST }}
  acl allow_list src {{ $value.Env.VHOST_WHITELIST }}
  http-request allow if allow_list
  http-request deny
{{ end }}

{{ end }}{{ end }}

frontend stats
  description statistics
  bind :::9000 v4v6

  mode http
  option httplog

  stats enable
  stats uri /
  stats hide-version
  stats refresh 5s
  stats show-node
  stats show-legends

frontend http-in
  description proxy-http
  bind :::80 v4v6

  mode http

  option httplog
  option forwardfor
  option http-server-close

  compression offload
  compression algo gzip
  compression type text/css text/html text/javascript application/javascript text/plain text/xml application/json 

  acl letsencrypt-acl path_beg /.well-known/acme-challenge/

{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_HOST" "," }}{{ range $index, $value := $containers }}
{{ if $value.Env.VHOST_SSL_ONLY }}  redirect scheme https code 301 if { hdr_dom(host) -i {{ $host }} } !{ ssl_fc } {{ end }}
  acl backend_{{ $value.Name }} hdr_dom(host) -i {{ $host }}
{{ end }}{{ end }}
{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_SSL_HOST" "," }}{{ range $index, $value := $containers }}
{{ if $value.Env.VHOST_SSL_ONLY }}  redirect scheme https code 301 if { hdr_dom(host) -i {{ $host }} } !{ ssl_fc } {{ end }}
  acl ssl_backend_{{ $value.Name }} hdr_dom(host) -i {{ $host }}
{{ end }}{{ end }}

  use_backend letsencrypt-backend if letsencrypt-acl
{{ range $host, $containers := groupBy $ "Env.VIRTUAL_HOST" }}{{ range $index, $value := $containers }}
  use_backend {{ $value.Name }} if backend_{{ $value.Name }} # {{ $host }} {{ $index }}
{{ end }}{{ end }}
{{ range $host, $containers := groupBy $ "Env.VIRTUAL_SSL_HOST" }}{{ range $index, $value := $containers }}
  use_backend SSL_{{ $value.Name }} if ssl_backend_{{ $value.Name }} # {{ $host }} {{ $index }}
{{ end }}{{ end }}

frontend https-in
  description proxy-https
  bind :::443 v4v6 ssl crt-list /data/ssl/crt-list.txt alpn h2,http/1.1

  mode http

  option httplog
  option forwardfor
  option http-server-close

  compression offload
  compression algo gzip
  compression type text/css text/html text/javascript application/javascript text/plain text/xml application/json 

  acl letsencrypt-acl path_beg /.well-known/acme-challenge/
{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_HOST" "," }}{{ range $index, $value := $containers }}
  acl backend_{{ $value.Name }} hdr_dom(host) -i {{ $host }}
{{ end }}{{ end }}
{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_SSL_HOST" "," }}{{ range $index, $value := $containers }}
  acl ssl_backend_{{ $value.Name }} hdr_dom(host) -i {{ $host }}
{{ end }}{{ end }}

  use_backend letsencrypt-backend if letsencrypt-acl
{{ range $host, $containers := groupBy $ "Env.VIRTUAL_HOST" }}{{ range $index, $value := $containers }}
  use_backend {{ $value.Name }} if backend_{{ $value.Name }} # {{ $host }} {{ $index }}
{{ end }}{{ end }}
{{ range $host, $containers := groupBy $ "Env.VIRTUAL_SSL_HOST" }}{{ range $index, $value := $containers }}
  use_backend SSL_{{ $value.Name }} if ssl_backend_{{ $value.Name }} # {{ $host }} {{ $index }}
{{ end }}{{ end }}

# LE Backend
backend letsencrypt-backend
  mode http
  server letsencrypt $LETSENCRYPT_BACKEND_IP:$LETSENCRYPT_BACKEND_PORT
