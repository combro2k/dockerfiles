# Global settings
global
  log /dev/log    local0
  log /dev/log    local1 notice

  user haproxy
  group haproxy

  lua-load /etc/haproxy/lua/acme-http01-webroot.lua

  crt-base /data/ssl
  ca-base /data/ssl

  tune.ssl.default-dh-param 2048

  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

  ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

  ssl-dh-param-file /data/ssl/dh-param.pem

# Default settings
defaults
  log global

  balance first
  maxconn 5000

  retries 3

  timeout connect 3000ms
  timeout client 5m
  timeout server 5m

  option dontlognull
  option redispatch

{{ range $host, $containers := groupBy $ "Env.VIRTUAL_HOST"}}{{ range $index, $value := $containers }}
{{ $addrLen := len $value.Networks }}
backend {{ $value.Name }}
  description {{ $host }}

  mode http

{{ if $value.Env.VHOST_CF }}
  # VHOST_CF setting
  acl from_cf src -i -f /data/cf-list-v4.txt -f /data/cf-list-v6.txt
  acl cf_ip_hdr req.hdr(CF-Connecting-IP) -m found

  http-request set-header X-Real-IP %[req.hdr(CF-Connecting-IP)] if from_cf cf_ip_hdr
  http-request set-header X-Forwarded-For %[req.hdr(CF-Connecting-IP)] if from_cf cf_ip_hdr
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request set-header X-Forwarded-Proto https if { ssl_fc }

  http-request allow if from_cf
  http-request deny
{{ else }}
  option forwardfor

  http-request set-header X-Forwarded-Port %[dst_port]
  http-request set-header X-Forwarded-Proto https if { ssl_fc }
{{ end }}


{{ if gt $addrLen 0 }}
{{ with $address := index $value.Networks 0 }}
  server {{ $value.Name }} {{ $address.IP }}:{{ if $value.Env.VIRTUAL_PORT }}{{ $value.Env.VIRTUAL_PORT }}{{ else }}80{{ end }}
{{ end }}
{{ end }}

  http-response set-header X-Frame-Options "SAMEORIGIN"
  http-response set-header X-Content-Type-Options "nosniff"
  http-response set-header X-XSS-Protection "1; mode=block"

{{ if $value.Env.VHOST_SSL_ONLY }}
  http-response set-header Strict-Transport-Security "max-age=15768000"
{{ end }}

{{ if $value.Env.VHOST_WHITELIST }}
  acl allow_list src {{ $value.Env.VHOST_WHITELIST }}
  http-request allow if allow_list
  http-request deny
{{ end }}

{{ end }}{{ end }}

{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_SSL_HOST" "," }}{{ range $index, $value := $containers }}
{{ $addrLen := len $value.Addresses }}
backend SSL_{{ $value.Name }}
  description {{ $host }}

  mode http
  option httplog

{{ if $value.Env.VHOST_CF }}
  # VHOST_CF setting
  acl from_cf src -i -f /data/cf-list-v4.txt -f /data/cf-list-v6.txt
  acl cf_ip_hdr req.hdr(CF-Connecting-IP) -m found

  http-request set-header X-Real-IP %[req.hdr(CF-Connecting-IP)] if from_cf cf_ip_hdr
  http-request set-header X-Forwarded-For %[req.hdr(CF-Connecting-IP)] if from_cf cf_ip_hdr
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request set-header X-Forwarded-Proto https if { ssl_fc }

  http-request allow if from_cf
  http-request deny
{{ else }}
  option forwardfor

  http-request set-header X-Forwarded-Port %[dst_port]
  http-request set-header X-Forwarded-Proto https if { ssl_fc }
{{ end }}

{{ if gt $addrLen 0 }}
{{ with $address := index $value.Networks 0 }}
  server {{ $value.Name }} {{ $address.IP }}:{{ if $value.Env.VIRTUAL_SSL_PORT }}{{ $value.Env.VIRTUAL_SSL_PORT }}{{ else }}443{{ end }} ssl verify none
{{ end }}
{{ end }}

  http-response set-header X-Frame-Options "SAMEORIGIN"
  http-response set-header X-Content-Type-Options "nosniff"
  http-response set-header X-XSS-Protection "1; mode=block"

{{ if $value.Env.VHOST_SSL_ONLY }}
  http-response set-header Strict-Transport-Security "max-age=15768000"
{{ end }}

{{ if $value.Env.VHOST_WHITELIST }}
  acl allow_list src {{ $value.Env.VHOST_WHITELIST }}
  http-request allow if allow_list
  http-request deny
{{ end }}

{{ end }}{{ end }}

frontend stats
  description statistics
  bind :::9000 v4v6

  mode http
  option httplog

  stats enable
  stats uri /
  stats hide-version
  stats refresh 5s
  stats show-node
  stats show-legends

frontend http-in
  description proxy-http
  bind :::80 v4v6

  mode http

  option httplog
  option http-server-close

  compression offload
  compression algo gzip
  compression type text/css text/html text/javascript application/javascript text/plain text/xml application/json

  acl url_acme_http01 path_beg /.well-known/acme-challenge/
  http-request use-service lua.acme-http01 if METH_GET url_acme_http01

{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_HOST" "," }}{{ range $index, $value := $containers }}
{{ if $value.Env.VHOST_SSL_ONLY }}  redirect scheme https code 301 if { hdr(host) -i {{ $host }} } !{ ssl_fc } {{ end }}
  acl backend_{{ $value.Name }} hdr(host) -i {{ $host }}
{{ end }}{{ end }}
{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_SSL_HOST" "," }}{{ range $index, $value := $containers }}
{{ if $value.Env.VHOST_SSL_ONLY }}  redirect scheme https code 301 if { hdr(host) -i {{ $host }} } !{ ssl_fc } {{ end }}
  acl ssl_backend_{{ $value.Name }} hdr(host) -i {{ $host }}
{{ end }}{{ end }}

{{ range $host, $containers := groupBy $ "Env.VIRTUAL_HOST" }}{{ range $index, $value := $containers }}
  use_backend {{ $value.Name }} if backend_{{ $value.Name }} # {{ $host }} {{ $index }}
{{ end }}{{ end }}
{{ range $host, $containers := groupBy $ "Env.VIRTUAL_SSL_HOST" }}{{ range $index, $value := $containers }}
  use_backend SSL_{{ $value.Name }} if ssl_backend_{{ $value.Name }} # {{ $host }} {{ $index }}
{{ end }}{{ end }}

frontend https-in
  description proxy-https
  bind :::443 v4v6 ssl crt-list /data/ssl/crt-list.txt alpn h2,http/1.1

  mode http

  option httplog
  option http-server-close

  compression offload
  compression algo gzip
  compression type text/css text/html text/javascript application/javascript text/plain text/xml application/json

  acl url_acme_http01 path_beg /.well-known/acme-challenge/
  http-request use-service lua.acme-http01 if METH_GET url_acme_http01

{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_HOST" "," }}{{ range $index, $value := $containers }}
  acl backend_{{ $value.Name }} hdr(host) -i {{ $host }}
{{ end }}{{ end }}
{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_SSL_HOST" "," }}{{ range $index, $value := $containers }}
  acl ssl_backend_{{ $value.Name }} hdr(host) -i {{ $host }}
{{ end }}{{ end }}

#  use_backend letsencrypt-backend if letsencrypt-acl
{{ range $host, $containers := groupBy $ "Env.VIRTUAL_HOST" }}{{ range $index, $value := $containers }}
  use_backend {{ $value.Name }} if backend_{{ $value.Name }} # {{ $host }} {{ $index }}
{{ end }}{{ end }}
{{ range $host, $containers := groupBy $ "Env.VIRTUAL_SSL_HOST" }}{{ range $index, $value := $containers }}
  use_backend SSL_{{ $value.Name }} if ssl_backend_{{ $value.Name }} # {{ $host }} {{ $index }}
{{ end }}{{ end }}
